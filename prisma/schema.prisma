generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model asset {
  uuid       String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  project_id String @db.Uuid

  created DateTime @default(now()) @db.Timestamp(0)

  alt         String? @db.VarChar(256)
  description String? @db.VarChar(256)

  width  Int @db.Integer
  height Int @db.Integer

  display Boolean    @default(false)
  type    asset_type


  // relations
  project project @relation(fields: [project_id], references: [uuid])

  @@index([project_id], name: "Assets_FK")
}

model project {
  uuid      String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  banner_id String? @unique @db.Uuid

  created DateTime @default(now()) @db.Timestamp(0)
  updated DateTime @default(now()) @db.Timestamp(0)

  name        String  @db.VarChar(32)
  description String? @db.VarChar(256)
  markdown    String? @db.VarChar(4096)

  status   project_status @default(unknown)
  projects Boolean        @default(false) @db.Boolean()
  pinned   Boolean        @default(false) @db.Boolean()

  // relations
  assets asset[]
  tags   tag[]
  links  link[]
  tag    tag[]   @relation(name: "notable_project_FK")
}

model tag {
  created DateTime @default(now()) @db.Timestamp(0)
  uuid    String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  name        String  @db.VarChar(32)
  description String? @db.VarChar(1024)

  website String? @db.VarChar(256)

  score      Int?     @db.Integer
  used_since DateTime @default(now()) @db.Timestamp(0)

  project_uuid String? @db.Uuid

  projects        project[]
  notable_project project?  @relation(name: "notable_project_FK", fields: [project_uuid], references: [uuid])

  category experience_category @default(other)
  @@index([uuid])
}

model mailing_list {
  created DateTime @default(now()) @db.Timestamp(0)
  uuid    String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  email    String  @unique @db.VarChar(256)
  verified Boolean @default(false) @db.Boolean()
}

model link {
  created    DateTime @default(now()) @db.Timestamp(0)
  project_id String   @db.Uuid

  uuid String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String @db.VarChar(32)
  url  String @db.VarChar(256)

  projects project @relation(fields: [project_id], references: [uuid])
}

enum asset_type {
  image
  audio
  video
  programming
}

enum project_status {
  finished
  in_progress  @map("in Progress")
  abandoned
  unknown
  on_hold      @map("On Hold")
}

enum experience_category {
  software
  language
  framework
  other
}
